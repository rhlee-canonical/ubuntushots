#
# debshots - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
email_to = email@christoph-haas.de

# SMTP server settings used to send out emails
smtp_server = localhost
#smtp_username =
#smtp_password =
error_email_from = debshots@screenshots.debian.net

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:debshots
full_stack = true
#static_files = true
cache_dir = %(here)s/data
beaker.session.key = debshots
beaker.session.timeout = 86400
beaker.session.secret = XtMPNevtFFO4gOm3VxfV
beaker.cache.data_dir = %(here)s/data/cache
beaker.session.data_dir = %(here)s/data/sessions
beaker.session.cookie_expires = True
beaker.session.type = ext:memcached
beaker.session.url = 127.0.0.1:11211


# Database URI
sqlalchemy.url = postgres://debshots:shootme@torf/debshots
#sqlalchemy.url = sqlite:///%(here)s/debshots.db

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Where the screenshots will get created. Schema:
# First char of the package + package name.
# Thumbnail:  .../c/cream/xxx (xxx=database id)
# Screenshot: .../c/cream/xxx (xxx=database id)

debshots.screenshots_directory = %(here)s/data/screenshots

# Sender address for automated emails
debshots.email_sender = support@screenshots.debian.net

# Additional salt to avoid reverse-engineering of MD5-hashed passwords
debshots.md5salt = rqxc5HrD1TUl

# Near Debian mirror to get Sources.gz files from (to create package cache)
debshots.debian_mirror = http://ftp.de.debian.org/debian

# Google analytics ID. If commented out the tracking script will not be included.
debshots.google_analytics_id = UA-6326849-1

# memcached server (the front page gets cached to prevent slashdotting)
debshots.memcache_server = 127.0.0.1:11211

# debtags that mark packages without useful screenshots
debshots.ignore_tags =

# For using Sendfile acceleration (http://wiki.nginx.org/NginxXSendfile)
# If set the front side webserver will handle the actual delivery of the file
#debshots.xsendfile = X-Accel-Redirect

# URL to get pickled information on available packages on
# (usually points to Enrico Zini's dde.debian.net)
#debshots.dde_update_url = http://dde.debian.net/dde/q/udd/packages/all?t=pickle
#debshots.dde_update_url = http://debtags.alioth.debian.org/cgi-bin/dde/q/udd/packages/all?t=pickle
debshots.dde_update_url = http://workaround.org/stuff/all.pickle.gz
debshots.dde_update_gzipped = True

#debshots.debtags_vocabulary_url = http://svn.debian.org/viewsvn/debtags/vocabulary/trunk/debian-packages
debshots.debtags_vocabulary_url = http://workaround.org/stuff/debtags-vocabulary

# Do not import packages that have one of these facets
debshots.debtags_facets_blacklist =
# Do not import packages that have one of these tags
debshots.debtags_tags_blacklist = role::app-data devel::doc role::documentation role::source admin::kernel role::devel-lib role::debug-symbols devel::library special::auto-inst-parts

# Do not assign tags to packages with these facets
debshots.debtags_facets_ignorelist = scope special culture

# Do not assign these tags to packages
debshots.debtags_tags_ignorelist =


# Logging configuration
[loggers]
keys = root, debshots, sqlalchemy, routes

[handlers]
keys = console, sqlalchemy

[formatters]
keys = generic, sqlalchemy


[logger_root]
level = INFO
#level = DEBUG
handlers = console

[logger_routes]
#level = DEBUG
handlers = console
qualname = routes.middleware

[logger_debshots]
level = DEBUG
#level = INFO
handlers =
qualname = debshots

[logger_sqlalchemy]
#level = INFO
level = WARNING
#level = DEBUG
handlers = sqlalchemy
qualname = sqlalchemy.engine
propagate = 0
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_sqlalchemy]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = sqlalchemy


[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[formatter_sqlalchemy]
format =  %(asctime)s,%(msecs)03d %(levelname) %(name)s: %(message)s
datefmt = %H:%M:%S
